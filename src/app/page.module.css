.container {
  display: flex;
  flex-direction: column;
  height: 100vh;
  background-color: var(--bg-primary);
}

.content {
  display: flex;
  flex: 1;
  overflow: hidden;
}

.canvasContainer {
  flex: 1;
  display: flex;
  flex-direction: column;
  background-color: var(--bg-primary);
  border-left: 1px solid var(--border-color);
  position: relative;
}

.canvasHeader {
  padding: 1rem;
  background-color: var(--sidebar-bg);
  border-bottom: 1px solid var(--border-color);
  display: flex;
  gap: 1rem;
}

.button {
  padding: 0.5rem 1rem;
  background-color: var(--button-bg);
  border: 1px solid var(--border-color);
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.9rem;
  transition: all 0.2s;
  color: var(--text-primary);
}

.button:hover {
  background-color: var(--button-hover);
}

.canvas {
  flex: 1;
  position: relative;
  background-color: var(--canvas-bg);
  background-image: linear-gradient(var(--canvas-grid) 1px, transparent 1px),
    linear-gradient(90deg, var(--canvas-grid) 1px, transparent 1px);
  background-size: 20px 20px;
  overflow: auto;
}

.node {
  position: absolute;
  min-width: 120px;
  padding: 0;
  background-color: var(--bg-primary);
  border: 2px solid var(--border-color);
  border-radius: 4px;
  cursor: move;
  user-select: none;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  position: relative;
  z-index: 999;
}

.nodeHeader {
  padding: 8px 12px;
  font-weight: 500;
  background-color: var(--node-header-bg);
  color: var(--node-header-text);
  border-bottom: 1px solid var(--border-color);
  height: 36px;
  display: flex;
  align-items: center;
}

.nodePreview {
  padding: 8px 12px;
  font-size: 0.85rem;
  color: var(--text-primary);
  opacity: 0.9;
  background-color: var(--preview-bg);
  font-family: monospace;
  border-top: 1px solid var(--border-color);
  min-height: 108px;
  display: flex;
  align-items: center;
}

/* 텍스트 오버플로우 처리를 위한 내부 컨테이너 추가 */
.previewText {
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.nodeDragging {
  opacity: 0.8;
  z-index: 1002;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.node:hover {
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);
}

.fileInputLabel {
  padding: 0.5rem 1rem;
  background-color: var(--button-bg);
  border: 1px solid var(--border-color);
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.9rem;
  transition: all 0.2s;
  color: var(--text-primary);
}

.fileInputLabel:hover {
  background-color: var(--button-hover);
}

.fileInput {
  display: none;
}

.resizeHandle {
  position: absolute;
  right: 0;
  bottom: 0;
  width: 10px;
  height: 10px;
  cursor: se-resize;
  background: linear-gradient(135deg, transparent 50%, var(--border-color) 50%);
}

.connectionPoint {
  position: absolute;
  width: 12px;
  height: 12px;
  background-color: var(--bg-primary);
  border: 2px solid var(--border-color);
  border-radius: 50%;
  cursor: crosshair;
  z-index: 1000;
  transition: all 0.2s ease;
}

.connectionPoint:hover {
  width: 16px;
  height: 16px;
  background-color: var(--primary-accent);
  border-color: var(--primary-accent);
  transform: scale(1.2);
  box-shadow: 0 0 4px rgba(0, 0, 0, 0.2);
}

.connectionPoint.top {
  top: -6px;
  left: 50%;
  transform: translateX(-50%);
}

.connectionPoint.right {
  right: -6px;
  top: 50%;
  transform: translateY(-50%);
}

.connectionPoint.bottom {
  bottom: -6px;
  left: 50%;
  transform: translateX(-50%);
}

.connectionPoint.left {
  left: -6px;
  top: 50%;
  transform: translateY(-50%);
}

.connectionLine {
  stroke: var(--border-color);
  stroke-width: 2;
  fill: none;
  marker-end: url(#arrowhead);
}

.arrowHead {
  fill: var(--border-color);
  stroke: none;
}

.connections {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 999;
  overflow: visible;
}
